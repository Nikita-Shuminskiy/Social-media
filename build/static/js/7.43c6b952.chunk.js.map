{"version":3,"sources":["components/Dialogs/Dialogs.module.css","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","Hoc/WithAuthRedirect.tsx","components/Dialogs/DialogItem/DiolagItem.tsx","components/Dialogs/Messege/Message.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx"],"names":["module","exports","_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","mapStateToProps","state","isAuth","authMe","withAuthRedirect","Component","connect","props","restProps","to","DialogItem","path","id","className","s","dialog","activeClassName","active","name","Message","messages","message","Dialogs","formik","useFormik","initialValues","valueMessage","validate","values","errors","onSubmit","value","sendMessage","resetForm","DialogsElement","dialogsPage","dialogs","map","d","MessageElement","m","dialog_item","messages_item","handleSubmit","TextField","placeholder","getFieldProps","DialogsContainer","this","React"],"mappings":"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","file":"static/js/7.43c6b952.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__I6fdL\",\"dialog_item\":\"Dialogs_dialog_item__17nja\",\"dialog\":\"Dialogs_dialog__3NhB0\",\"active\":\"Dialogs_active__33RkJ\",\"messages_item\":\"Dialogs_messages_item__3ak0s\",\"messages\":\"Dialogs_messages__3iCs7\"};","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React, { ComponentType } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { AppStateType } from '../Redux/Redux_Store';\r\n\r\ntype MapStatePropsType = {\r\n    isAuth:boolean\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType):MapStatePropsType => (\r\n    {\r\n        isAuth: state.authMe.isAuth\r\n    }\r\n)\r\n\r\n\r\nexport function withAuthRedirect<T>(Component: ComponentType<T>)  {\r\n\r\n    const RedirectComponent = (props: MapStatePropsType) => {\r\n        const {isAuth, ...restProps} = props\r\n        if (!isAuth) return <Redirect to=\"/login\"/>\r\n\r\n\r\n        return <Component {...restProps as T} />\r\n    }\r\n    return connect(mapStateToProps)(RedirectComponent)\r\n}\r\n\r\n","import React from 'react';\r\nimport s from '../Dialogs.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\ntype dialogsType = {\r\n    name: string\r\n    id: string\r\n\r\n}\r\n\r\nconst DialogItem: React.FC<dialogsType> = (props) => {\r\n    let path = '/dialogs/' + props.id\r\n    return (\r\n        <div className={s.dialog}>\r\n            <NavLink activeClassName={s.active} to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from '../Dialogs.module.css';\r\n\r\nexport type MessageType = {\r\n    message: string\r\n}\r\n\r\nconst Message: React.FC<MessageType> = (props) => {\r\n    return (\r\n        <div className={s.messages}>\r\n            <span>{props.message}</span>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default Message;","import React, { ChangeEvent } from 'react'\r\nimport DialogItem from './DialogItem/DiolagItem'\r\nimport s from './Dialogs.module.css'\r\nimport Message from './Messege/Message'\r\nimport { DialogPageType } from '../../Redux/React_Redux_StoreType/types/StateType';\r\nimport { Field, InjectedFormProps, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, required } from '../../Utils/Validators/Validators';\r\nimport { useFormik } from 'formik';\r\nimport { TextField } from '@material-ui/core';\r\n\r\n\r\nexport type DialogsType = {\r\n    dialogsPage: DialogPageType\r\n    sendMessage: (value:string) => void\r\n}\r\ntype FormikErrorType = {\r\n    valueMessage?:string\r\n}\r\n\r\n\r\nconst Dialogs = (props: DialogsType) => {\r\n\r\n    const formik = useFormik({\r\n        initialValues:  {\r\n            valueMessage:''\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {};\r\n            if (!values.valueMessage) {\r\n                errors.valueMessage = 'Required';\r\n            }\r\n            return errors;\r\n        },\r\n        onSubmit: value => {\r\n            value.valueMessage && props.sendMessage(value.valueMessage)\r\n            formik.resetForm()\r\n        }\r\n    })\r\n\r\n    let DialogsElement = props.dialogsPage.dialogs.map(d => <DialogItem key={d.id} id={d.id} name={d.name}/>)\r\n    let MessageElement = props.dialogsPage.message.map(m => <Message key={m.id} message={m.message}/>)\r\n\r\n\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialog_item + ' ' + s.active}>\r\n                {DialogsElement}\r\n            </div>\r\n            <div className={s.messages_item}>\r\n                {MessageElement}\r\n                <form onSubmit={formik.handleSubmit}>\r\n                    <div>\r\n                        <TextField\r\n                            placeholder={'Enter Message'}\r\n                            {...formik.getFieldProps('valueMessage')}\r\n                        />\r\n                        {formik.errors.valueMessage ? <div><b> {formik.errors.valueMessage}</b></div> : null}\r\n                        <button>Send</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Dialogs","import React from 'react'\r\nimport s from './Dialogs.module.css'\r\nimport { sendMessage } from '../../Redux/DialogReducer';\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\nimport { AppStateType } from '../../Redux/Redux_Store';\r\nimport { withAuthRedirect } from '../../Hoc/WithAuthRedirect';\r\nimport { DialogPageType } from '../../Redux/React_Redux_StoreType/types/StateType';\r\n\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => ({\r\n    dialogsPage: state.dialogs,\r\n})\r\n\r\ntype MapStateToPropsType = {\r\n    dialogsPage: DialogPageType\r\n\r\n}\r\n\r\ntype MapStateDispatchToPropsType = {\r\n    sendMessage: (value: string) => void\r\n}\r\n\r\ntype DialogContainerType = MapStateToPropsType & MapStateDispatchToPropsType\r\n\r\n\r\nclass DialogsContainer extends React.Component<DialogContainerType> {\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    render() {\r\n        return (<>\r\n                <Dialogs {...this.props} dialogsPage={this.props.dialogsPage}/>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default withAuthRedirect(connect(mapStateToProps, {sendMessage})(DialogsContainer))\r\n\r\n"],"sourceRoot":""}