{"version":3,"sources":["Redux/UsersReducer.ts","components/Navbar/Navbar.module.css","components/Login/LoginForm.module.css","Api/Api.ts","reportWebVitals.ts","Redux/Auth_Reducer.ts","Redux/SideBar_Reducer.ts","Redux/App-reducer.ts","Redux/Redux_Store.ts","components/Login/LoginForm.tsx","components/Header/Header.tsx","components/Header/Header_Container.tsx","components/Navbar/FriendsBlock/Friends/Friends.tsx","components/Navbar/FriendsBlock/FriendsBlock.tsx","components/Navbar/FriendsBlock/FriendsBlockContainer.tsx","components/Navbar/Navbar.tsx","components/Settings/Settings.tsx","App.tsx","index.tsx","components/Header/Header.module.css","Utils/Validators/Validators.ts","components/Common/FormControls/FormControls.module.css","components/Navbar/FriendsBlock/Friends/friends.module.css","components/Common/FormControls/FormControls.tsx","img/1487.gif","components/Common/Loader/Loader.tsx","Redux/ProfileReducer.ts","Redux/DialogReducer.ts"],"names":["initialState","dataUsers","totalCount","currentPage","pageSize","isFetching","disabledInProgressUser","UsersReducer","state","action","type","map","u","id","userId","followed","users","pageNumberCurrent","disFetching","idUser","filter","userDissableButton","setIsFetching","getUserThunk","dispatch","usersAPI","getUsers","then","data","items","followThunk","followApi","response","resultCode","unfollowThunk","unFollowApi","module","exports","instance","axios","create","withCredentials","headers","baseURL","get","post","delete","userIdAPI","profileAPI","getProfile","console","warn","getStatus","updateStatus","status","put","authMeAPI","Me","login","email","password","rememberMe","logout","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","NaN","isAuth","setUserDataAuthMe","payload","getUserAutMeThunk","friendsPage","img","name","alt","initialized","rootReducer","combineReducers","dialogs","DialogReducer","profile","ProfileReducer","sideBar","usersData","authMe","form","formReducer","appReducer","store","createStore","applyMiddleware","ThunkMiddleware","window","maxLengthValidator","maxLengthCreator","LoginReduxForm","reduxForm","props","onSubmit","handleSubmit","Field","validate","required","placeholder","component","TextControlForm","children","error","className","s","errorForm","connect","loginThunk","messages","length","stopSubmit","_error","to","formData","Header","header","src","loginBlock","onClick","logoutThunk","search","alert","pageX","button_s","HeaderContainer","this","React","Component","Friends","img_avatar","FriendsBlock","FriendsElementAdd","e","NavBar","nav","item","activeClassName","active","setting","Settings","DialogsContainer","lazy","UserContainer","ProfileContainer","Musick","App","initializeThunk","Suspense","fallback","Loader","path","Login","AppContainer","compose","promise","Promise","all","withRouter","GlobalAppComponent","ReactDOM","render","document","getElementById","value","maxLength","input","meta","classFormControl","touched","formControl","errorText","style","width","LoaderImg","postData","message","likesCount","proFileHeader","headerImg","profileUsers","aboutMe","contacts","facebook","website","vk","twitter","instagram","youtube","github","mainLink","lookingForAJob","lookingForAJobDescription","fullName","photos","small","large","postNew","v1","newMessage","f","addPost","setProfileStatus","getUserProfileThunk","getStatusThunk","updateStatusThunk","sendMessage","body"],"mappings":"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","file":"static/js/main.3fb60795.chunk.js","sourcesContent":["import { usersAPI } from '../Api/Api'\r\nimport { ActionsTypes, AppDispatchType } from './Redux_Store'\r\n\r\nexport type UserType = {\r\n    name: string\r\n    id: number\r\n    photos: {\r\n        small: string\r\n        large: string\r\n    }\r\n    status: string | null\r\n    followed: boolean\r\n    totalCount: number\r\n    error: null\r\n}\r\nexport type DataUsersTye = {\r\n    dataUsers: UserType[]\r\n    totalCount: number\r\n    currentPage: number\r\n    pageSize: number\r\n    isFetching: boolean\r\n    disabledInProgressUser: Array<number>\r\n}\r\nconst initialState: DataUsersTye = {\r\n    dataUsers: [],\r\n    totalCount: 10,\r\n    currentPage: 1,\r\n    pageSize: 10,\r\n    isFetching: false,\r\n    disabledInProgressUser: [],\r\n}\r\n\r\nexport function UsersReducer(state: DataUsersTye = initialState, action: ActionsTypes): DataUsersTye {\r\n    switch (action.type) {\r\n        case 'USER/Follow':\r\n            return {\r\n                ...state,\r\n                dataUsers: state.dataUsers.map(u => u.id === action.userId ? {...u, followed: true} : u)\r\n            }\r\n        case 'USER/Un-Follow':\r\n            return {\r\n                ...state,\r\n                dataUsers: state.dataUsers.map(u => u.id === action.userId ? {...u, followed: false} : u)\r\n            }\r\n        case 'USER/Set-UsersContainerAPI':\r\n            return {...state, dataUsers: action.users}\r\n        case 'USER/CURRENT-PAGES':\r\n            return {...state, currentPage: action.pageNumberCurrent}\r\n\r\n        case 'USER/TOTAL-USER-COUNT':\r\n            return {...state, totalCount: action.totalCount}\r\n\r\n        case 'USER/Toggle is fetching':\r\n            return {...state, isFetching: action.isFetching}\r\n        case 'USER/TOGGLE-DISABLED-BUTTON-USER': {\r\n            return {\r\n                ...state,\r\n                //@ts-ignore\r\n                disabledInProgressUser: action.disFetching ? [...state.disabledInProgressUser, action.idUser] : [state.disabledInProgressUser.filter(id => id !== action.idUser)]\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userDissableButton = (disFetching: boolean, idUser: number) => ({\r\n    type: 'USER/TOGGLE-DISABLED-BUTTON-USER',\r\n    disFetching,\r\n    idUser\r\n} as const)\r\n\r\nexport const follow = (userId: number) => ({type: 'USER/Follow', userId} as const)\r\n\r\nexport const unFollow = (userId: number) => ({type: 'USER/Un-Follow', userId} as const)\r\n\r\nexport const setUsers = (users: UserType[]) => ({type: 'USER/Set-UsersContainerAPI', users} as const)\r\n\r\nexport const setCurrentPages = (pageNumberCurrent: number) => ({type: 'USER/CURRENT-PAGES', pageNumberCurrent} as const)\r\n\r\nexport const setTotalUserCount = (totalCount: number) => ({type: 'USER/TOTAL-USER-COUNT', totalCount} as const)\r\n\r\nexport const setIsFetching = (isFetching: boolean) => ({type: 'USER/Toggle is fetching', isFetching} as const)\r\n\r\nexport const getUserThunk = (currentPage: number, pageSize: number) => {\r\n    return (dispatch: AppDispatchType) => {\r\n        dispatch(setIsFetching(true))\r\n        usersAPI.getUsers(currentPage, pageSize).then(data => {\r\n            dispatch(setIsFetching(false))\r\n            dispatch(setUsers(data.items))\r\n            dispatch(setTotalUserCount(data.totalCount))\r\n            dispatch(setCurrentPages(currentPage))\r\n        })\r\n    }\r\n}\r\nexport const followThunk = (id: number) => {\r\n    return (dispatch: AppDispatchType) => {\r\n        dispatch(userDissableButton(true, id))\r\n        usersAPI.followApi(id).then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(follow(id))\r\n            }\r\n            dispatch(userDissableButton(false, id))\r\n        })\r\n    }\r\n}\r\nexport const unfollowThunk = (id: number) => {\r\n    return (dispatch: AppDispatchType) => {\r\n        dispatch(userDissableButton(true, id))\r\n        usersAPI.unFollowApi(id).then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(unFollow(id))\r\n            }\r\n            dispatch(userDissableButton(false, id))\r\n        })\r\n    }\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1btus\",\"item\":\"Navbar_item__PM8mR\",\"active\":\"Navbar_active__1IlwC\",\"setting\":\"Navbar_setting__3wexh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorForm\":\"LoginForm_errorForm__3lS6X\"};","import axios from 'axios';\r\n\r\n\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    headers: {'API-KEY': '978dde1d-b974-4ee1-a942-d32857675e96'},\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/'\r\n})\r\n\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage: number, pageSize: number) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`).then(response => {\r\n            return response.data\r\n        })\r\n    },\r\n    followApi(id: number) {\r\n        return instance.post(`follow/${id}`,)\r\n\r\n    },\r\n    unFollowApi(id: number) {\r\n        return instance.delete(`follow/${id}`)\r\n    },\r\n    userIdAPI(userId:number) {\r\n        return  instance.get( 'profile/' + userId)\r\n    }\r\n}\r\nexport const profileAPI = {\r\n    getProfile(userId:number) {\r\n        console.warn('Obsolete method.Please profileAPI object')\r\n        return  usersAPI.userIdAPI(userId)\r\n    },\r\n    getStatus(userId:number){\r\n        return instance.get( 'profile/status/' + userId)\r\n    },\r\n    updateStatus(status:string){\r\n        return instance.put( 'profile/status', {status})\r\n    }\r\n}\r\nexport const authMeAPI= {\r\n    Me() {\r\n        return instance.get(`auth/me`,)\r\n    },\r\n    login(email:string,password:number,rememberMe:boolean){\r\n        return instance.post('auth/login', {email,password,rememberMe})\r\n    },\r\n    logout(){\r\n        return instance.delete('auth/login')\r\n    }\r\n}\r\n\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { authMeAPI } from '../Api/Api'\r\nimport { ActionsTypes, AppDispatchType } from './Redux_Store'\r\nimport { stopSubmit } from 'redux-form';\r\n\r\n type AuthMeType = {\r\n    data: DataTypeAuth\r\n    isAuth: boolean\r\n}\r\n\r\n type DataTypeAuth = {\r\n    id: number\r\n    email: string\r\n    login: string\r\n}\r\n\r\nconst initialState: AuthMeType = {\r\n    data: {\r\n        id: NaN,\r\n        email: '',\r\n        login: '',\r\n    },\r\n    isAuth: false\r\n}\r\n\r\nexport function AuthReducer(state = initialState, action: ActionsTypes): AuthMeType {\r\n    switch (action.type) {\r\n        case 'AUTH/SET-USER-DATA': {\r\n            return {...state, ...action.payload, isAuth: action.isAuth}}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setUserDataAuthMe = (payload: DataTypeAuth | null, isAuth: boolean) => ({type: 'AUTH/SET-USER-DATA', payload, isAuth} as const)\r\n\r\nexport const getUserAutMeThunk = () => (dispatch: AppDispatchType) => {\r\n    return authMeAPI.Me().then(response => {\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setUserDataAuthMe(response.data, true))\r\n        }\r\n    })\r\n}\r\n\r\nexport const loginThunk = (email: string, password: number, rememberMe: boolean) => {\r\n    return (dispatch: AppDispatchType) => {\r\n        authMeAPI.login(email, password, rememberMe)\r\n            .then(response => {\r\n                if (response.data.resultCode === 0) {\r\n                    // @ts-ignore\r\n                    dispatch(getUserAutMeThunk())\r\n                } else {\r\n                    const messages = response.data.messages.length > 0 ? response.data.messages[0] : 'some error'\r\n                    return dispatch(stopSubmit('login', {_error: messages}))\r\n                }\r\n            })\r\n    }\r\n}\r\nexport const logoutThunk = () => {\r\n    return (dispatch: AppDispatchType) => {\r\n        authMeAPI.logout()\r\n            .then(response => {\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(setUserDataAuthMe(null, false))\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\n\r\n","import { SidBarType } from './React_Redux_StoreType/types/StateType';\r\n\r\nconst initialState:SidBarType = {\r\n    friendsPage: [\r\n        {img: 'https://mir-avatarok.3dn.ru/_si/0/92302704.jpg', name: 'Nastya', alt: 'qwq' , id:1},\r\n        {img: 'https://mir-avatarok.3dn.ru/_si/0/92302704.jpg', name: 'Vivaldi', alt: 'qwzxq' , id:2},\r\n        {img: 'https://mir-avatarok.3dn.ru/_si/0/92302704.jpg', name: 'Nana', alt: 'qwe' , id:3},\r\n    ]\r\n}\r\nexport const SideBarReducer = (state:SidBarType = initialState):SidBarType => {\r\n    return state\r\n};\r\n","import { ActionsTypes, AppDispatchType } from './Redux_Store'\r\nimport { getUserAutMeThunk } from './Auth_Reducer';\r\n\r\n\r\ntype initType = {\r\n    initialized: boolean\r\n}\r\nconst initialState: initType = {\r\n    initialized: false\r\n}\r\n\r\nexport function AppReducer(state = initialState, action: ActionsTypes): initType {\r\n    switch (action.type) {\r\n        case 'APP/SET-INITIALIZED': {\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const initializedSuccess = () => ({type: 'APP/SET-INITIALIZED'} as const)\r\n\r\nexport const initializeAppThunk = () => (dispatch: AppDispatchType) => {\r\n    // @ts-ignore\r\n    let promise = dispatch(getUserAutMeThunk())\r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(initializedSuccess())\r\n        })\r\n\r\n}\r\n\r\n\r\n\r\n\r\n","import { applyMiddleware, combineReducers, compose, createStore, Dispatch } from 'redux';\r\nimport { DialogReducer, sendMessage } from './DialogReducer';\r\nimport { addPost, deletePost, ProfileReducer, setProfileStatus, setProfileUser } from './ProfileReducer';\r\nimport {\r\n    setCurrentPages,\r\n    follow,\r\n    setUsers,\r\n    unFollow,\r\n    setTotalUserCount,\r\n    UsersReducer,\r\n    setIsFetching,\r\n    userDissableButton\r\n} from './UsersReducer';\r\nimport { AuthReducer, setUserDataAuthMe } from './Auth_Reducer';\r\nimport { SideBarReducer } from './SideBar_Reducer';\r\nimport ThunkMiddleware from 'redux-thunk'\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport { AppReducer, initializedSuccess } from './App-reducer';\r\n\r\nexport type ActionsTypes =\r\n    ReturnType<typeof addPost>\r\n    | ReturnType<typeof sendMessage>\r\n    | ReturnType<typeof follow>\r\n    | ReturnType<typeof unFollow>\r\n    | ReturnType<typeof setUsers>\r\n    | ReturnType<typeof setCurrentPages>\r\n    | ReturnType<typeof setTotalUserCount>\r\n    | ReturnType<typeof setIsFetching>\r\n    | ReturnType<typeof setProfileUser>\r\n    | ReturnType<typeof setUserDataAuthMe>\r\n    | ReturnType<typeof userDissableButton>\r\n    | ReturnType<typeof setProfileStatus>\r\n    | ReturnType<typeof initializedSuccess>\r\n    | ReturnType<typeof deletePost>\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\nexport type AppDispatchType = Dispatch<ActionsTypes>\r\n\r\nconst rootReducer = combineReducers({\r\n    dialogs: DialogReducer,\r\n    profile: ProfileReducer,\r\n    sideBar: SideBarReducer,\r\n    usersData: UsersReducer,\r\n    authMe: AuthReducer,\r\n    form: formReducer,\r\n    appReducer: AppReducer\r\n})\r\n\r\n// @ts-ignore\r\n/*const store = createStore(rootReducer, applyMiddleware(ThunkMiddleware) +  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);*/\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(ThunkMiddleware))\r\n\r\n/*export type StoreType = typeof store;*/\r\n// @ts-ignore\r\nwindow.store = store\r\n\r\nexport default store\r\n\r\n","import { Field, InjectedFormProps, reduxForm } from 'redux-form'\r\nimport React from 'react'\r\nimport { maxLengthCreator, required } from '../../Utils/Validators/Validators';\r\nimport { TextControlForm } from '../Common/FormControls/FormControls';\r\nimport { connect } from 'react-redux';\r\nimport { loginThunk } from '../../Redux/Auth_Reducer';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { AppStateType } from '../../Redux/Redux_Store';\r\nimport s from './LoginForm.module.css'\r\n\r\n\r\ntype FormDataType = {\r\n    login: string\r\n    password: number\r\n    rememberMe: boolean\r\n}\r\nconst maxLengthValidator = maxLengthCreator(30)\r\n\r\nconst MyForm: React.FC<InjectedFormProps<FormDataType>> = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field\r\n                    validate={[required, maxLengthValidator]}\r\n                    placeholder={'Login'}\r\n                    name={'login'}\r\n                    component={TextControlForm}\r\n                    children={'input'}/>\r\n            </div>\r\n            <div>\r\n                <Field\r\n                    validate={[required, maxLengthValidator]}\r\n                    placeholder={'Password'}\r\n                    name={'password'}\r\n                    component={TextControlForm}\r\n                    type=\"password\"\r\n                    children={'input'}\r\n                />\r\n            </div>\r\n            <div>\r\n                <Field\r\n                    name={'rememberMe'}\r\n                    component={'input'}\r\n                    type=\"checkBox\"/>\r\n                <span>Remember Me</span>\r\n\r\n            </div>\r\n\r\n            <button>Send</button>\r\n            {props.error && <div className={s.errorForm}>{props.error}</div>}\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm<FormDataType>({form: 'login'})(MyForm)\r\n\r\ntype MapDispatchToPropsType = {\r\n    loginThunk: (email: string, password: number, rememberMe: boolean) => void\r\n}\r\ntype MapStatePropsType = {\r\n    isAuth: boolean\r\n}\r\n\r\nconst MapStateToProps = (state: AppStateType): MapStatePropsType => ({\r\n    isAuth: state.authMe.isAuth\r\n})\r\n\r\ntype ConnectType = MapDispatchToPropsType & MapStatePropsType\r\n\r\nconst Login = ({loginThunk, isAuth}: ConnectType) => {\r\n    const onSubmit = (formData: FormDataType) => {\r\n        loginThunk(formData.login, formData.password, formData.rememberMe)\r\n    }\r\n    if (isAuth) return <Redirect to={'/profile'}/>\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit}/>\r\n    </div>\r\n}\r\n\r\nexport default connect(MapStateToProps, {loginThunk})(Login)","import React from 'react'\r\nimport s from './Header.module.css'\r\n\r\ntype HeaderType = {\r\n    login: string | null\r\n    logoutThunk:() => void\r\n    isAuth:boolean\r\n}\r\n\r\nconst Header: React.FC<HeaderType> = (props) => {\r\n    return (\r\n        <header className={s.header}>\r\n            <img className={s.img}\r\n                 src={'https://st4.depositphotos.com/9449108/25247/i/600/depositphotos_252470670-stock-photo-illustration-of-a-japanese-warrior.jpg'}/>\r\n            <div>\r\n                <div className={s.loginBlock}>\r\n                    { props.isAuth ? <div>{props.login} <button onClick={props.logoutThunk}>Logout</button></div> : <div><button onClick={props.logoutThunk}>Logout</button> </div>}\r\n                </div>\r\n                <input className={s.search} type=\"text\"/>\r\n                <button onClick={(s) => alert(s.pageX)} className={s.button_s}>Search</button>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react';\r\nimport Header from './Header';\r\nimport {logoutThunk } from '../../Redux/Auth_Reducer';\r\nimport { connect } from 'react-redux';\r\nimport { AppStateType } from '../../Redux/Redux_Store';\r\n\r\n\r\nexport type HeaderContainerType = {\r\n    login: string | null\r\n    logoutThunk: () => void\r\n    isAuth:boolean\r\n}\r\nexport type State = {}\r\n\r\nclass HeaderContainer extends React.Component<HeaderContainerType, State> {\r\n\r\n\r\n    render() {\r\n        return <Header isAuth={this.props.isAuth} login={this.props.login} logoutThunk={this.props.logoutThunk}/>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType) => ({\r\n    login: state.authMe.data.login,\r\n    isAuth: state.authMe.isAuth\r\n})\r\nexport default connect(mapStateToProps, { logoutThunk})(HeaderContainer);","import React from 'react';\r\nimport s from './friends.module.css'\r\n\r\nexport type friendsType = {\r\n    img:string\r\n    alt:string\r\n    name:string\r\n}\r\n\r\nconst Friends = (props:friendsType) => {\r\n    return (\r\n        <div className={s.img_avatar} >\r\n             <img src={props.img} className={s.img_avatar} alt={props.alt}/>\r\n              <p className={s.name}>{props.name}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Friends;","import React from 'react';\r\nimport s from './friendsBlock.module.css'\r\nimport Friends from './Friends/Friends';\r\nimport { SidBarType } from '../../../Redux/React_Redux_StoreType/types/StateType';\r\n\r\n\r\ntype friendsBlockType = {\r\n    friendsPage: SidBarType\r\n\r\n}\r\n\r\n\r\nconst FriendsBlock= (props:friendsBlockType) => {\r\n\r\n    let FriendsElementAdd = props.friendsPage.friendsPage.map(e => <Friends key={e.id} img={e.img} alt={e.alt} name={e.name}/>)\r\n    return (\r\n        <div>\r\n            <h1>Friends</h1>\r\n            {FriendsElementAdd}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FriendsBlock;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { AppDispatchType, AppStateType } from '../../../Redux/Redux_Store';\r\nimport FriendsBlock from './FriendsBlock';\r\n\r\n\r\nconst mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        friendsPage: state.sideBar\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: AppDispatchType) => {\r\n    return {\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FriendsBlock);","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './Navbar.module.css'\r\nimport FriendsContainer from './FriendsBlock/FriendsBlockContainer';\r\n\r\n\r\nconst NavBar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={`${s.item}`}><NavLink activeClassName={s.active} to={'/profile'}>Profile</NavLink></div>\r\n            <div className={`${s.item}`}><NavLink  activeClassName={s.active} to={'/dialogs'}>Messege</NavLink></div>\r\n            <div className={s.item}><NavLink  activeClassName={s.active} to={'/news'}>News</NavLink></div>\r\n            <div className={s.item}><NavLink  activeClassName={s.active} to={'/musick'}>Musick</NavLink></div>\r\n            <div className={s.item + ' ' + s.setting}><NavLink  activeClassName={s.active} to={'/setting'}>Setting</NavLink></div>\r\n            <div className={s.item + ' ' + s.setting}><NavLink  activeClassName={s.active} to={'/users'}>Users</NavLink></div>\r\n            <div className={s.item + ' ' + s.setting}><NavLink  activeClassName={s.active} to={'/login'}>Login</NavLink></div>\r\n            <FriendsContainer />\r\n        </nav>\r\n    )\r\n}\r\nexport default NavBar\r\n\r\n","import React from 'react';\r\nimport s from'./Settings.module.css'\r\n\r\ntype SettingType = {\r\n\r\n}\r\n\r\nconst Settings: React.FC<SettingType> = (props) => {\r\n    return (\r\n       <div></div>\r\n    )\r\n}\r\n\r\nexport default Settings","import React, { ComponentType } from 'react';\nimport './App.css'\nimport { BrowserRouter, HashRouter, Route, Switch, withRouter } from 'react-router-dom'\nimport { connect, Provider } from 'react-redux';\nimport store, { AppStateType } from './Redux/Redux_Store';\nimport { compose } from 'redux';\nimport { initializeAppThunk } from './Redux/App-reducer';\nimport Loader from './components/Common/Loader/Loader';\nimport Login from './components/Login/LoginForm';\nimport HeaderContainer from './components/Header/Header_Container';\nimport NavBar from './components/Navbar/Navbar';\nimport Settings from './components/Settings/Settings';\n\nconst DialogsContainer = React.lazy(() => import ('./components/Dialogs/DialogsContainer'));\nconst UserContainer = React.lazy(() => import('./components/Users/UsersContainer'));\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\nconst Musick = React.lazy(() => import( './components/Musick/Musick'))\n\ntype AppPropsType = {\n    initializeThunk: () => void\n    initialized: boolean\n}\n\nclass App extends React.Component<AppPropsType> {\n    componentDidMount() {\n        this.props.initializeThunk()\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Loader/>\n        }\n\n        return (\n            <div className={'app-wrapper'}>\n                <HeaderContainer/>\n                <NavBar/>\n                <div className={'app-wrapper-content'}>\n                    <React.Suspense fallback={<Loader/>}>\n                        <Switch>\n                            <Route path={'/dialogs'} component={DialogsContainer}/>\n                            <Route path={'/profile/:userId?'} component={ProfileContainer}/>\n                            <Route path={'/users'} component={UserContainer}/>\n                            <Route path={'/login'} component={Login}/>\n                            <Route path={'/musick'} component={Musick}/>\n                        </Switch>\n                    </React.Suspense>\n                </div>\n                <Settings/>\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: AppStateType) => ({\n    initialized: state.appReducer.initialized\n})\n\nconst AppContainer = compose<ComponentType>(connect(mapStateToProps, {initializeThunk: initializeAppThunk}), withRouter)(App)\n\nconst GlobalAppComponent = () => {\n    return (<HashRouter>\n        <Provider store={store}>\n            <AppContainer/>\n        </Provider>\n    </HashRouter>)\n}\nexport default GlobalAppComponent","import ReactDOM from 'react-dom';\nimport React from 'react';\nimport reportWebVitals from './reportWebVitals';\nimport GlobalAppComponent from './App';\n\n\nReactDOM.render(<GlobalAppComponent/>, document.getElementById('root')\n);\n\nreportWebVitals();\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"Header_img__sBm02\",\"header\":\"Header_header__1Qevl\",\"search\":\"Header_search__uHOUV\",\"button_s\":\"Header_button_s__JLIAS\",\"loginBlock\":\"Header_loginBlock__u6BU7\"};","export const required = (value: string) => {\r\n    if (value) return undefined\r\n    return 'Field is required'\r\n}\r\n\r\n\r\nexport const maxLengthCreator = (maxLength: number) => (value: string) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`\r\n    return undefined\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"FormControls_error__eVcnq\",\"errorText\":\"FormControls_errorText__14yRd\",\"formControl\":\"FormControls_formControl__26roo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img_avatar\":\"friends_img_avatar__2H_jF\",\"name\":\"friends_name__15HEu\"};","import React from 'react'\r\nimport s from './FormControls.module.css'\r\n\r\n\r\nexport const TextControlForm = ({input, meta,children,  ...props}: any) => {\r\n\r\n    const classFormControl = meta.error && meta.touched\r\n\r\n    return <div className={classFormControl ? s.error : s.formControl}>\r\n        {children === 'input' ? <input {...input} {...props}/> : <textarea {...input} {...props} /> }\r\n        {classFormControl && <div><span className={s.errorText}>{meta.error} </span></div>}\r\n    </div>\r\n}\r\n","export default __webpack_public_path__ + \"static/media/1487.707b7930.gif\";","import React from 'react';\r\nimport LoaderImg from '../../../img/1487.gif'\r\nexport type LoaderType = {\r\n\r\n}\r\n\r\nexport const Loader = (props:LoaderType) => {\r\n    return (\r\n        <div>\r\n            <img style={{width:'100px'}} src={LoaderImg} alt=\"Lodding\"/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Loader;","import { profileAPI, usersAPI } from '../Api/Api';\r\nimport { PostType, ProfilePageType, ProfileUsersType } from './React_Redux_StoreType/types/StateType';\r\nimport { ActionsTypes, AppDispatchType } from './Redux_Store';\r\nimport { v1 } from 'uuid';\r\n\r\n\r\nconst initialState: ProfilePageType = {\r\n    postData: [\r\n        {\r\n            id: '1',\r\n            message: 'helo how are you',\r\n            likesCount: 12,\r\n            img: 'https://cdn5.vectorstock.com/i/1000x1000/65/59/hacker-with-computer-avatar-character-vector-14776559.jpg',\r\n        },\r\n        {\r\n            id: '2',\r\n            message: 'Im learnin to React, React my first life)',\r\n            likesCount: 12,\r\n            img: 'https://cdn5.vectorstock.com/i/1000x1000/65/59/hacker-with-computer-avatar-character-vector-14776559.jpg',\r\n        },\r\n    ],\r\n    proFileHeader: {\r\n        headerImg: {\r\n            img: 'https://image.freepik.com/free-photo/the-color-and-beauty-of-the-sky-at-sunset_51141-13.jpg',\r\n        },\r\n    },\r\n    profileUsers: {\r\n        aboutMe: '',\r\n        contacts: {\r\n            facebook: '',\r\n            website: '',\r\n            vk: '',\r\n            twitter: '',\r\n            instagram: '',\r\n            youtube: '',\r\n            github: '',\r\n            mainLink: ''\r\n        },\r\n        lookingForAJob: false,\r\n        lookingForAJobDescription: '',\r\n        fullName: '',\r\n        userId: null,\r\n        photos: {\r\n            small: '',\r\n            large: ''\r\n        }\r\n    },\r\n    status: '',\r\n}\r\n\r\n\r\nexport function ProfileReducer(state = initialState, action: ActionsTypes): ProfilePageType {\r\n    switch (action.type) {\r\n        case 'PROFILE/ADD-POST':\r\n            const postNew: PostType = {\r\n                id: v1(),\r\n                message: action.newMessage,\r\n                likesCount: 0,\r\n                img: state.profileUsers.photos.small ?\r\n                    state.profileUsers.photos.small:'https://cdn5.vectorstock.com/i/1000x1000/65/59/hacker-with-computer-avatar-character-vector-14776559.jpg',\r\n            }\r\n            return {...state, postData: [postNew,...state.postData]}\r\n\r\n        case 'PROFILE/SET-PROFILE-USER':\r\n            return {...state, profileUsers: action.profile}\r\n\r\n        case 'PROFILE/SET-PROFILE-STATUS':\r\n            return {...state, status: action.status}\r\n\r\n        case 'PROFILE/DEL-POST-PROFILE':\r\n            return {...state, postData: state.postData.filter((f) => f.id !== action.id)}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const addPost = (newMessage: string) => ({type: 'PROFILE/ADD-POST', newMessage} as const)\r\n\r\nexport const setProfileUser = (profile: ProfileUsersType) => ({type: 'PROFILE/SET-PROFILE-USER', profile} as const)\r\n\r\nexport const setProfileStatus = (status: string) => ({type: 'PROFILE/SET-PROFILE-STATUS', status} as const)\r\n\r\nexport const deletePost = (id: string) => ({type: 'PROFILE/DEL-POST-PROFILE', id} as const)\r\n\r\nexport const getUserProfileThunk = (userId: number) => {\r\n    return (dispatch: AppDispatchType) => {\r\n        usersAPI.userIdAPI(userId)\r\n            .then(response => {\r\n                dispatch(setProfileUser(response.data))\r\n            })\r\n    }\r\n}\r\nexport const getStatusThunk = (userId: number) => {\r\n    return (dispatch: AppDispatchType) => {\r\n        profileAPI.getStatus(userId)\r\n            .then(response => {\r\n                dispatch(setProfileStatus(response.data))\r\n            })\r\n    }\r\n}\r\n\r\nexport const updateStatusThunk = (status: string) => {\r\n    return (dispatch: AppDispatchType) => {\r\n        profileAPI.updateStatus(status)\r\n            .then(response => {\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(setProfileStatus(status))\r\n                }\r\n            })\r\n    }\r\n}","import { DialogPageType } from './React_Redux_StoreType/types/StateType';\r\nimport { ActionsTypes } from './Redux_Store';\r\nimport { v1 } from 'uuid';\r\n\r\n\r\nexport const sendMessage = (value: string) => ({type: 'DIALOG/SEND-MESSAGE', value} as const)\r\n\r\n\r\nlet initialState: DialogPageType = {\r\n    dialogs: [\r\n        {name: 'nick', id: v1(),},\r\n        {name: 'Leks', id: v1(),},\r\n        {name: 'Nastya', id: v1(),},\r\n        {name: 'Egor', id: v1(),},\r\n    ],\r\n    message: [\r\n        {message: 'как дела', id: v1(),},\r\n        {message: 'как дела', id: v1(),},\r\n        {message: 'как дела', id: v1(),},\r\n        {message: 'как дела', id: v1(),},\r\n    ]\r\n}\r\n\r\nexport function DialogReducer(state: DialogPageType = initialState, action: ActionsTypes): DialogPageType {\r\n    switch (action.type) {\r\n        case 'DIALOG/SEND-MESSAGE':\r\n            const body = action.value\r\n            return {\r\n                ...state,\r\n                message: [...state.message, {message: body, id: v1()}]\r\n            }\r\n\r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n"],"sourceRoot":""}